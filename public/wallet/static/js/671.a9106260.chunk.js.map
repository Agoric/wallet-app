{"version":3,"file":"static/js/671.a9106260.chunk.js","mappings":"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","sources":["../../../../node_modules/@mui/material/Alert/alertClasses.js","../../../../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../../../../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../../../../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../../../../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../../../../node_modules/@mui/material/Alert/Alert.js","../../api/src/marshal-contexts.js","components/SmartWalletConnection.jsx"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${theme.palette[color].light}`,\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'filled' && {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n          fontSize: \"small\"\n        }))\n      })\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","// @ts-check\nimport { makeScalarMap } from '@agoric/store';\nimport { Far, makeMarshal, Remotable } from '@endo/marshal';\nimport { HandledPromise } from '@endo/eventual-send'; // TODO: convince tsc this isn't needed\n\nconst { details: X, quote: q } = assert;\n\n/**\n * For a value with a known id in the board, we can use\n * that board id as a slot to preserve identity when marshaling.\n *\n * @typedef {`board${Digits}`} BoardId\n */\n\n/**\n * @param {unknown} specimen\n * @returns {specimen is BoardId}\n */\nconst isBoardId = specimen => {\n  return typeof specimen === 'string' && !!specimen.match(/board[^:]/);\n};\n\n/**\n * When marshaling a purse, payment, etc. we partition the slots\n * using prefixes.\n *\n * @template {Record<string, IdTable<*,*>>} T\n * @typedef {`${string & keyof T}:${Digits}`} WalletSlot<T>\n */\n/**\n * @template {string} K\n * @typedef {`${K}:${Digits}`} KindSlot<K>\n */\n\n/**\n * @template {Record<string, IdTable<*,*>>} T\n * @param {T} _tables\n * @param {string & keyof T} kind\n * @param {number} id\n * @returns {WalletSlot<T>}\n */\nconst makeWalletSlot = (_tables, kind, id) => {\n  const digits = /** @type {Digits} */ (`${id}`);\n  return `${kind}:${digits}`;\n};\n\n/**\n * @template {Record<string, IdTable<*,*>>} T\n * @param {T} record\n * @param {(value: string, index: number, obj: string[]) => boolean} predicate\n * @returns {string & keyof T | undefined}\n */\nconst findKey = (record, predicate) => {\n  const key = Object.keys(record).find(predicate);\n  return key;\n};\n\n/**\n * @template {Record<string, IdTable<*,*>>} T\n * @param {T} tables\n * @param {string} slot\n * @returns {{ kind: undefined | string & keyof T, id: number }}\n */\nconst parseWalletSlot = (tables, slot) => {\n  const kind = findKey(tables, k => slot.startsWith(`${k}:`));\n  const id = kind ? Number(slot.slice(kind.length + 1)) : NaN;\n  return { kind, id };\n};\n\n/**\n * Since KindSlots always include a colon and BoardIds never do,\n * we an mix them without confusion.\n *\n * @template {Record<string, IdTable<*,*>>} T\n * @typedef {WalletSlot<T> | BoardId} MixedSlot<T>\n */\n/**\n * @typedef {`1` | `12` | `123`} Digits - 1 or more digits.\n * NOTE: the typescript definition here is more restrictive than\n * actual usage.\n */\n\n/**\n * @template Slot\n * @template Val\n *\n * @typedef {{\n *   bySlot: MapStore<Slot, Val>,\n *   byVal: MapStore<Val, Slot>,\n * }} IdTable<Value>\n */\n\n/**\n * @template Slot\n * @template Val\n * @param {IdTable<Slot, Val>} table\n * @param {Slot} slot\n * @param {Val} val\n */\nconst initSlotVal = (table, slot, val) => {\n  table.bySlot.init(slot, val);\n  table.byVal.init(val, slot);\n};\n\n/**\n * Make context for exporting wallet data where brands etc. can be recognized by boardId.\n *\n * When serializing wallet state for, there's a tension between\n *\n *  - keeping purses etc. closely held\n *  - recognizing identity of brands also referenced in the state of contracts such as the AMM\n *\n * `makeMarshal()` is parameterized by the type of slots. Here we use a disjoint union of\n *   - board ids for widely shared objects\n *   - kind:seq ids for closely held objects; for example purse:123\n */\nexport const makeExportContext = () => {\n  const walletObjects = {\n    /** @type {IdTable<number, Purse>} */\n    purse: {\n      bySlot: makeScalarMap(),\n      byVal: makeScalarMap(),\n    },\n    /** @type {IdTable<number, Payment>} */\n    payment: {\n      bySlot: makeScalarMap(),\n      byVal: makeScalarMap(),\n    },\n    // TODO: offer, contact, dapp\n    /** @type {IdTable<number, unknown>} */\n    unknown: {\n      bySlot: makeScalarMap(),\n      byVal: makeScalarMap(),\n    },\n  };\n  /** @type {IdTable<BoardId, unknown>} */\n  const boardObjects = {\n    bySlot: makeScalarMap(),\n    byVal: makeScalarMap(),\n  };\n\n  /**\n   * Look up the slot in mappings from published data\n   * else try walletObjects that we have seen.\n   *\n   * @throws if not found (a slotToVal function typically\n   *         conjures a new identity)\n   *\n   * @param {MixedSlot<typeof walletObjects>} slot\n   * @param {string} _iface\n   */\n  const slotToVal = (slot, _iface) => {\n    if (isBoardId(slot) && boardObjects.bySlot.has(slot)) {\n      return boardObjects.bySlot.get(slot);\n    }\n    const { kind, id } = parseWalletSlot(walletObjects, slot);\n    assert(kind, X`bad slot kind: ${slot}`);\n    const val = walletObjects[kind].bySlot.get(id); // or throw\n    return val;\n  };\n\n  let unknownNonce = 0;\n\n  /**\n   * @param {unknown} val\n   * @returns {MixedSlot<typeof walletObjects>}\n   */\n  const valToSlot = val => {\n    if (boardObjects.byVal.has(val)) {\n      return boardObjects.byVal.get(val);\n    }\n    const kind = findKey(walletObjects, k => walletObjects[k].byVal.has(val));\n    if (kind) {\n      // @ts-expect-error has(val) above ensures val has the right type\n      const id = walletObjects[kind].byVal.get(val);\n      return makeWalletSlot(walletObjects, kind, id);\n    }\n    unknownNonce += 1;\n    const slot = makeWalletSlot(walletObjects, 'unknown', unknownNonce);\n    initSlotVal(walletObjects.unknown, unknownNonce, val);\n    return slot;\n  };\n\n  /**\n   * @template V\n   * @param {string & keyof typeof walletObjects} kind\n   * @param {IdTable<number, V>} table\n   */\n  const makeSaver = (kind, table) => {\n    let nonce = 0;\n    /** @param {V} val */\n    const saver = val => {\n      nonce += 1;\n      initSlotVal(table, nonce, val);\n    };\n    return saver;\n  };\n\n  return harden({\n    savePurseActions: makeSaver('purse', walletObjects.purse),\n    savePaymentActions: makeSaver('payment', walletObjects.payment),\n    /**\n     * @param {number} id\n     * @param {Purse} purse\n     */\n    initPurseId: (id, purse) => {\n      initSlotVal(walletObjects.purse, id, purse);\n    },\n    purseEntries: walletObjects.purse.bySlot.entries,\n    /**\n     * @param {BoardId} id\n     * @param {unknown} val\n     */\n    initBoardId: (id, val) => {\n      initSlotVal(boardObjects, id, val);\n    },\n    /**\n     * @param {BoardId} id\n     * @param {unknown} val\n     */\n    ensureBoardId: (id, val) => {\n      if (boardObjects.byVal.has(val)) {\n        assert.equal(boardObjects.byVal.get(val), id);\n        return;\n      }\n      initSlotVal(boardObjects, id, val);\n    },\n    ...makeMarshal(valToSlot, slotToVal),\n  });\n};\n\nconst defaultMakePresence = iface => {\n  const severed = `SEVERED: ${iface.replace(/^Alleged: /, '')}`;\n  return Far(severed, {});\n};\n\n/**\n * Make context for unserializing wallet or board data.\n *\n * @param {(iface: string) => unknown} [makePresence]\n */\nexport const makeImportContext = (makePresence = defaultMakePresence) => {\n  const walletObjects = {\n    /** @type {IdTable<number, unknown>} */\n    purse: {\n      bySlot: makeScalarMap(),\n      byVal: makeScalarMap(),\n    },\n    /** @type {IdTable<number, unknown>} */\n    payment: {\n      bySlot: makeScalarMap(),\n      byVal: makeScalarMap(),\n    },\n    /** @type {IdTable<number, unknown>} */\n    unknown: {\n      bySlot: makeScalarMap(),\n      byVal: makeScalarMap(),\n    },\n  };\n  /** @type {IdTable<BoardId, unknown>} */\n  const boardObjects = {\n    bySlot: makeScalarMap(),\n    byVal: makeScalarMap(),\n  };\n\n  /**\n   * @template Slot\n   * @template Val\n   * @param {IdTable<Slot, Val>} table\n   * @param {Slot} slot\n   * @param {string} iface\n   */\n  const provideVal = (table, slot, iface) => {\n    if (table.bySlot.has(slot)) {\n      return table.bySlot.get(slot);\n    }\n    const val = makePresence(iface);\n    initSlotVal(table, slot, val);\n    return val;\n  };\n\n  const slotToVal = {\n    /**\n     * @param {string} slot\n     * @param {string} iface\n     */\n    fromBoard: (slot, iface) => {\n      assert(isBoardId(slot), X`bad board slot ${q(slot)}`);\n      return provideVal(boardObjects, slot, iface);\n    },\n\n    /**\n     * @param {string} slot\n     * @param {string} iface\n     */\n    fromMyWallet: (slot, iface) => {\n      const { kind, id } = parseWalletSlot(walletObjects, slot);\n      return kind\n        ? provideVal(walletObjects[kind], id, iface)\n        : slotToVal.fromBoard(slot, iface);\n    },\n  };\n\n  const valToSlot = {\n    /** @param {unknown} val */\n    fromMyWallet: val => {\n      const kind = findKey(walletObjects, k => walletObjects[k].byVal.has(val));\n      if (kind) {\n        const id = walletObjects[kind].byVal.get(val);\n        return makeWalletSlot(walletObjects, kind, id);\n      }\n      assert.fail(X`cannot serialize unregistered ${val}`);\n    },\n  };\n\n  const marshal = {\n    fromBoard: makeMarshal(undefined, slotToVal.fromBoard, {\n      marshalName: 'fromBoard',\n    }),\n    fromMyWallet: makeMarshal(valToSlot.fromMyWallet, slotToVal.fromMyWallet, {\n      marshalName: 'fromMyWallet',\n    }),\n  };\n\n  return harden({\n    fromMyWallet: Far('wallet marshaller', { ...marshal.fromMyWallet }),\n    fromBoard: Far('board marshaller', { ...marshal.fromBoard }),\n  });\n};\n\n/**\n * @param {string} iface\n * @param {{\n *   applyMethod: (target: unknown, method: string | symbol, args: unknown[]) => void,\n *   applyFunction: (target: unknown, args: unknown[]) => void,\n * }} handler\n */\nconst makePresence = (iface, handler) => {\n  let obj;\n  // eslint-disable-next-line no-new\n  new HandledPromise((resolve, reject, resolveWithPresence) => {\n    obj = resolveWithPresence(handler);\n  });\n  assert(obj);\n  return Remotable(iface, undefined, obj);\n};\n\n/**\n * @param {string} iface\n * @param {(parts: unknown[]) => void} log\n */\nexport const makeLoggingPresence = (iface, log) => {\n  /** @type {any} */ // TODO: solve types puzzle\n  const it = makePresence(iface, {\n    applyMethod: (target, method, args) => {\n      log(harden(['applyMethod', target, method, args]));\n    },\n    applyFunction: (target, args) => {\n      log(harden(['applyFunction', target, args]));\n    },\n  });\n  return it;\n};\n","import { makeFollower, makeLeader } from '@agoric/casting';\nimport React, { useEffect, useState } from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport { observeIterator } from '@agoric/notifier';\nimport { makeImportContext } from '@agoric/wallet/api/src/marshal-contexts';\n\nimport { withApplicationContext } from '../contexts/Application';\nimport {\n  makeBackendFromWalletBridge,\n  makeWalletBridgeFromFollower,\n} from '../util/WalletBackendAdapter';\nimport { SmartConnectionMethod } from '../util/connections';\nimport { bridgeStorageMessages } from '../util/BridgeStorage';\n\nconst Alert = React.forwardRef(function Alert({ children, ...props }, ref) {\n  return (\n    <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props}>\n      {children}\n    </MuiAlert>\n  );\n});\n\nconst SmartWalletConnection = ({\n  connectionConfig,\n  setConnectionState,\n  setBackend,\n  setBackendErrorHandler,\n  keplrConnection,\n}) => {\n  const [snackbarMessages, setSnackbarMessages] = useState([]);\n  setConnectionState('connecting');\n\n  const handleSnackbarClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackbarMessages(sm => sm.slice(1));\n  };\n\n  const showError = (message, e, severity = 'error') => {\n    if (e) {\n      console.error(`${message}:`, e);\n      message += `: ${e.message}`;\n    }\n    if (severity === 'error') {\n      setConnectionState('error');\n    }\n    setSnackbarMessages(sm => [...sm, { severity, message }]);\n  };\n\n  useEffect(() => {\n    if (\n      !connectionConfig ||\n      (connectionConfig.smartConnectionMethod === SmartConnectionMethod.KEPLR &&\n        !keplrConnection)\n    ) {\n      return undefined;\n    }\n\n    let cancelIterator;\n    let cleanupStorageBridge;\n    const follow = async () => {\n      const { href, smartConnectionMethod } = connectionConfig;\n      let publicAddress;\n      if (smartConnectionMethod === SmartConnectionMethod.KEPLR) {\n        publicAddress = keplrConnection.address;\n      } else {\n        publicAddress = connectionConfig.publicAddress;\n      }\n\n      const backendError = e => {\n        showError('Error in wallet backend', e);\n        setBackend(null);\n        setConnectionState('error');\n      };\n\n      const context = makeImportContext();\n      const leader = makeLeader(href);\n      const follower = makeFollower(\n        `:published.wallet.${publicAddress}`,\n        leader,\n        { unserializer: context.fromMyWallet },\n      );\n      const bridge = makeWalletBridgeFromFollower(\n        follower,\n        leader,\n        context.fromBoard,\n        publicAddress,\n        keplrConnection,\n        backendError,\n        () => setConnectionState('bridged'),\n      );\n      const { backendIt, cancel } = await makeBackendFromWalletBridge(bridge);\n      cleanupStorageBridge = bridgeStorageMessages(bridge);\n      cancelIterator = cancel;\n      // Need to thunk the error handler, or it gets called immediately.\n      setBackendErrorHandler(() => backendError);\n      return observeIterator(backendIt, {\n        updateState: be => {\n          cancelIterator && setBackend(be);\n        },\n        fail: e => {\n          cancelIterator && backendError(e);\n        },\n        finish: be => {\n          cancelIterator && setBackend(be);\n        },\n      });\n    };\n    follow().catch(e => showError('Cannot read Smart Wallet casting', e));\n\n    return () => {\n      cancelIterator && cancelIterator();\n      cancelIterator = undefined;\n      cleanupStorageBridge && cleanupStorageBridge();\n      cleanupStorageBridge = undefined;\n    };\n  }, [connectionConfig, keplrConnection]);\n\n  return (\n    <div>\n      <Snackbar open={snackbarMessages.length > 0}>\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbarMessages[0]?.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbarMessages[0]?.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default withApplicationContext(SmartWalletConnection, context => ({\n  connectionConfig: context.connectionConfig,\n  setConnectionState: context.setConnectionState,\n  setBackend: context.setBackend,\n  setBackendErrorHandler: context.setBackendErrorHandler,\n  keplrConnection: context.keplrConnection,\n}));\n"],"names":["getAlertUtilityClass","slot","generateUtilityClass","generateUtilityClasses","createSvgIcon","_jsx","d","_CloseIcon","_excluded","AlertRoot","styled","Paper","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","severity","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","borderRadius","shape","backgroundColor","display","padding","light","alertClasses","main","border","fontWeight","fontWeightMedium","dark","AlertIcon","icon","marginRight","fontSize","opacity","AlertMessage","message","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","React","inProps","ref","useThemeProps","children","className","closeText","iconMapping","onClose","role","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","square","elevation","clsx","IconButton","size","title","onClick","CloseIcon","details","X","quote","q","assert","isBoardId","specimen","match","makeWalletSlot","_tables","kind","id","findKey","record","predicate","Object","keys","find","parseWalletSlot","tables","k","startsWith","Number","slice","length","NaN","initSlotVal","table","val","bySlot","init","byVal","defaultMakePresence","iface","severed","replace","Far","Alert","withApplicationContext","connectionConfig","setConnectionState","setBackend","setBackendErrorHandler","keplrConnection","snackbarMessages","setSnackbarMessages","useState","showError","e","console","sm","useEffect","smartConnectionMethod","SmartConnectionMethod","cancelIterator","cleanupStorageBridge","async","href","publicAddress","address","backendError","context","makePresence","walletObjects","purse","makeScalarMap","payment","unknown","boardObjects","provideVal","has","get","slotToVal","fromBoard","fromMyWallet","valToSlot","fail","marshal","makeMarshal","undefined","marshalName","harden","makeImportContext","leader","makeLeader","follower","makeFollower","unserializer","bridge","makeWalletBridgeFromFollower","backendIt","cancel","makeBackendFromWalletBridge","bridgeStorageMessages","observeIterator","updateState","be","finish","follow","catch","Snackbar","open","_","reason","sx","width"],"sourceRoot":""}