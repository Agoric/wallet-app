{"version":3,"file":"static/js/168.5e2d9c8c.chunk.js","mappings":"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","sources":["../../../../node_modules/@mui/material/Alert/alertClasses.js","../../../../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../../../../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../../../../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../../../../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../../../../node_modules/@mui/material/Alert/Alert.js","components/SmartWalletConnection.jsx","util/SuggestChain.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${theme.palette[color].light}`,\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'filled' && {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n          fontSize: \"small\"\n        }))\n      })\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import { makeFollower, makeLeader, makeCastingSpec } from '@agoric/casting';\n\nimport React, { useEffect, useState } from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n\nimport { observeIterator } from '@agoric/notifier';\nimport { withApplicationContext } from '../contexts/Application';\nimport { suggestChain } from '../util/SuggestChain';\nimport {\n  makeBackendFromWalletBridge,\n  makeWalletBridgeFromFollower,\n} from '../util/WalletBackendAdapter';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst SmartWalletConnection = ({\n  walletConnection,\n  setWalletConnection,\n  setConnectionState,\n  setBackend,\n  setBackendErrorHandler,\n}) => {\n  const [snackbarMessages, setSnackbarMessages] = useState([]);\n\n  const handleSnackbarClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackbarMessages(sm => sm.slice(1));\n  };\n\n  const showError = (message, e, severity = 'error') => {\n    if (e) {\n      console.error(`${message}:`, e);\n      message += `: ${e.message}`;\n    }\n    if (severity === 'error') {\n      setConnectionState('error');\n    }\n    setSnackbarMessages(sm => [...sm, { severity, message }]);\n  };\n  const showReadOnlyError = (message, e) =>\n    showError(`READ-ONLY: ${message} for write access`, e, 'warning');\n\n  useEffect(() => {\n    if (!walletConnection || !walletConnection.smartWalletAddress) {\n      return () => {};\n    }\n\n    let cancelIterator;\n\n    const followWallet = async () => {\n      const { url, smartWalletAddress } = walletConnection;\n      const walletSpec = `:published.wallet.${smartWalletAddress}`;\n\n      const backendError = e => {\n        showError('Error in wallet backend', e);\n        setBackend(null);\n        setConnectionState('error');\n      };\n\n      const leader = makeLeader(url);\n      const castingSpec = makeCastingSpec(walletSpec);\n      const follower = makeFollower(leader, castingSpec);\n      const bridge = makeWalletBridgeFromFollower(follower, backendError);\n      const { backendIt, cancel } = await makeBackendFromWalletBridge(bridge);\n      cancelIterator = cancel;\n      // Need to thunk the error handler, or it gets called immediately.\n      setBackendErrorHandler(() => backendError);\n      return observeIterator(backendIt, {\n        updateState: be => {\n          setBackend(be);\n        },\n        fail: backendError,\n        finish: be => {\n          setBackend(be);\n        },\n      });\n    };\n    followWallet().catch(e =>\n      showError('Cannot read Smart Wallet state casting', e),\n    );\n\n    return () => {\n      cancelIterator && cancelIterator();\n    };\n  }, [walletConnection]);\n\n  useEffect(() => {\n    if (!walletConnection) {\n      return () => {};\n    }\n    let outdated;\n    const connect = async () => {\n      if (!window.getOfflineSigner || !window.keplr) {\n        showReadOnlyError('Please install the Keplr extension');\n      } else if (window.keplr.experimentalSuggestChain) {\n        try {\n          const { url } = walletConnection;\n          const { client, signer } = await suggestChain(url);\n\n          const setDefaultAddress = async () => {\n            if (walletConnection.smartWalletAddress) {\n              return;\n            }\n            const signerAccounts = await signer.getAccounts();\n            if (walletConnection.smartWalletAddress) {\n              return;\n            }\n\n            // We'll use the first available account for now.\n            const { address: defaultAddress } = signerAccounts[0];\n            setWalletConnection({\n              ...walletConnection,\n              smartWalletAddress: defaultAddress,\n            });\n          };\n\n          await setDefaultAddress();\n\n          // TODO: Would enable Keplr for transacting the Agoric client.\n          console.log('Keplr client', client);\n          showReadOnlyError('Transaction manager not implemented');\n        } catch (e) {\n          if (!outdated) {\n            showReadOnlyError('Failed to connect to Keplr', e);\n          }\n        }\n      } else {\n        showReadOnlyError(\n          'Please use the most recent version of the Keplr extension',\n        );\n      }\n    };\n    connect().catch(e => showReadOnlyError('Failed to connect to Keplr', e));\n\n    return () => {\n      outdated = true;\n    };\n  }, [walletConnection]);\n\n  return (\n    <div>\n      <Snackbar open={snackbarMessages.length > 0}>\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbarMessages[0]?.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbarMessages[0]?.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default withApplicationContext(SmartWalletConnection, context => ({\n  walletConnection: context.walletConnection,\n  setWalletConnection: context.setWalletConnection,\n  setConnectionState: context.setConnectionState,\n  setBackend: context.setBackend,\n  setBackendErrorHandler: context.setBackendErrorHandler,\n}));\n","import { SigningStargateClient } from '@cosmjs/stargate';\n\nexport const AGORIC_COIN_TYPE = 564;\nexport const COSMOS_COIN_TYPE = 118;\n\nexport async function suggestChain(networkConfig, caption = undefined) {\n  const coinType = Number(\n    new URL(networkConfig).searchParams.get('coinType') || AGORIC_COIN_TYPE,\n  );\n  const res = await fetch(networkConfig, {\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n  });\n  if (!res.ok) {\n    throw Error(`Cannot fetch network: ${res.status}`);\n  }\n  const { chainName: chainId, rpcAddrs } = await res.json();\n  const hostname = new URL(networkConfig).hostname;\n  const network = hostname.split('.')[0];\n  let rpc;\n  let api;\n  if (network !== hostname) {\n    rpc = `https://${network}.rpc.agoric.net`;\n    api = `https://${network}.api.agoric.net`;\n  } else {\n    const rpcHrefs = rpcAddrs.map(rpcAddr =>\n      // Don't remove explicit port numbers from the URL, because the Cosmos\n      // `--node=xxx` flag requires them (it doesn't just assume that\n      // `--node=https://testnet.rpc.agoric.net` is the same as\n      // `--node=https://testnet.rpc.agoric.net:443`)\n      rpcAddr.includes('://') ? rpcAddr : `http://${rpcAddr}`,\n    );\n\n    rpc = rpcHrefs[Math.floor(Math.random() * rpcHrefs.length)];\n    api = rpc.replace(/(:\\d+)?$/, ':1317');\n  }\n  const stakeCurrency = {\n    coinDenom: 'BLD',\n    coinMinimalDenom: 'ubld',\n    coinDecimals: 6,\n    coinGeckoId: undefined,\n  };\n  const stableCurrency = {\n    coinDenom: 'RUN',\n    coinMinimalDenom: 'urun',\n    coinDecimals: 6,\n    coinGeckoId: undefined,\n  };\n  const chainInfo = {\n    rpc,\n    rest: api,\n    chainId,\n    chainName: caption || `Agoric ${network}`,\n    stakeCurrency,\n    walletUrlForStaking: `https://${network}.staking.agoric.app`,\n    bip44: {\n      coinType,\n    },\n    bech32Config: {\n      bech32PrefixAccAddr: 'agoric',\n      bech32PrefixAccPub: 'agoricpub',\n      bech32PrefixValAddr: 'agoricvaloper',\n      bech32PrefixValPub: 'agoricvaloperpub',\n      bech32PrefixConsAddr: 'agoricvalcons',\n      bech32PrefixConsPub: 'agoricvalconspub',\n    },\n    currencies: [stakeCurrency, stableCurrency],\n    feeCurrencies: [stableCurrency],\n    features: ['ibc-transfer'],\n  };\n  await window.keplr.experimentalSuggestChain(chainInfo);\n  await window.keplr.enable(chainId);\n\n  const offlineSigner = window.getOfflineSigner(chainId);\n  const cosmJS = await SigningStargateClient.connectWithSigner(\n    rpc,\n    offlineSigner,\n  );\n\n  /*\n  // Example transaction \n  const amount = {\n    denom: 'ubld',\n    amount: '1234567',\n  };\n  const accounts = await offlineSigner.getAccounts();\n  await cosmJS.sendTokens(\n    accounts[0].address,\n    'agoric123456',\n    [amount],\n    {\n      amount: [\n        {\n          amount: '500000',\n          denom: 'urun',\n        },\n      ],\n      gas: '890000',\n    },\n    'enjoy!',\n  );\n */\n\n  return { client: cosmJS, signer: offlineSigner };\n}\n"],"names":["getAlertUtilityClass","slot","generateUtilityClass","generateUtilityClasses","createSvgIcon","_jsx","d","_CloseIcon","_excluded","AlertRoot","styled","Paper","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","severity","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","borderRadius","shape","backgroundColor","display","padding","light","alertClasses","main","border","fontWeight","fontWeightMedium","dark","AlertIcon","icon","marginRight","fontSize","opacity","AlertMessage","message","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","React","inProps","ref","useThemeProps","children","className","closeText","iconMapping","onClose","role","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","square","elevation","clsx","IconButton","size","title","onClick","CloseIcon","Alert","withApplicationContext","walletConnection","setWalletConnection","setConnectionState","setBackend","setBackendErrorHandler","snackbarMessages","setSnackbarMessages","useState","showError","e","console","sm","showReadOnlyError","useEffect","smartWalletAddress","cancelIterator","async","url","walletSpec","backendError","leader","makeLeader","castingSpec","makeCastingSpec","follower","makeFollower","bridge","makeWalletBridgeFromFollower","backendIt","cancel","makeBackendFromWalletBridge","observeIterator","updateState","be","fail","finish","followWallet","catch","outdated","window","getOfflineSigner","keplr","experimentalSuggestChain","client","signer","networkConfig","caption","undefined","coinType","Number","URL","searchParams","get","res","fetch","headers","Headers","ok","Error","status","chainName","chainId","rpcAddrs","json","hostname","network","split","rpc","api","rpcHrefs","map","rpcAddr","includes","Math","floor","random","length","replace","stakeCurrency","coinDenom","coinMinimalDenom","coinDecimals","coinGeckoId","stableCurrency","chainInfo","rest","walletUrlForStaking","bip44","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","feeCurrencies","features","enable","offlineSigner","SigningStargateClient","suggestChain","setDefaultAddress","signerAccounts","getAccounts","address","defaultAddress","log","connect","Snackbar","open","_","reason","slice","sx","width","context"],"sourceRoot":""}