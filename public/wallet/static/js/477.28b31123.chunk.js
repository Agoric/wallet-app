"use strict";(globalThis.webpackChunk_agoric_wallet_ui=globalThis.webpackChunk_agoric_wallet_ui||[]).push([[477],{689:(e,t,n)=>{n.r(t),n.d(t,{default:()=>M});var o=n(7990),s=n(3519),a=n(4698),r=n(7017),i=n(955);const c=harden({generation:0n,value:void 0}),l=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c;return harden({generation:t.generation+1n,value:e})},{details:d}=assert,p=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,i.vO)();const t=t=>e.has(t)?e.get(t):c;return(0,r.cI)("store cache coordinator",{getRecentState:async e=>t(e),tryUpdateState:async(n,o,s)=>{const a=t(n),{generation:r,value:c}=a,l=r+1n,{generation:p,value:h}=o;if(assert(p<=l,d`Cannot refer to future generation; expected ${l}, got ${p}`),p<l)return a;if(assert.equal(p,l),!(0,i.wB)(c,s))return a;const g=harden({generation:l,value:h});return l<=1n?e.init(n,g):e.set(n,g),g}})},h=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:p();const t=function(t,n){if(!n)return r.E.get((0,r.E)(e).getRecentState(t)).value;const o=(arguments.length<=2?0:arguments.length-2)>0?arguments.length<=2?void 0:arguments[2]:i.M.any();return new Promise(((s,a)=>{const i=async c=>{const d=await("function"===typeof n?n(c.value):n),p=l(d,c),h=await(0,r.E)(e).tryUpdateState(t,p,o);h.generation<=p.generation?s(h.value):i(h).catch(a)};(0,r.E)(e).getRecentState(t).then(i).catch(a)}))};return t};var g=n(3770),u=n(603),v=n(578),w=n(9322),m=(n(2691),n(9947));const _=m.u4,f=()=>({error:null,location:null,connectionParams:{}}),C=[(0,m.eR)("reset","idle",_(f)),(0,m.eR)("error","error",_(((e,t)=>({...e,error:t.error}))))],E=()=>(0,m.C8)({idle:(0,m.SB)(...C,(0,m.eR)("locate","locating",_(((e,t)=>({...e,connectionParams:t.connectionParams})))),(0,m.eR)("connect","connecting")),locating:(0,m.SB)(...C,(0,m.j8)("connecting",(0,m.lo)((e=>{let{location:t}=e;return!!t}))),(0,m.eR)("located","connecting",_(((e,t)=>({...e,location:t.href}))))),connecting:(0,m.SB)(...C,(0,m.eR)("connected","bridged")),bridged:(0,m.SB)(...C,(0,m.eR)("needDappApproval","approving")),approving:(0,m.SB)(...C,(0,m.eR)("needDappApproval","approving"),(0,m.eR)("dappApproved","bridged")),error:(0,m.SB)(...C)},f),b=e=>{let t;const n=()=>{e._startCapTP((e=>{t.readyState===WebSocket.OPEN&&t.send(JSON.stringify(e))}),"walletAdmin"),assert(e._captp);const{dispatch:n,getBootstrap:o}=e._captp;t.addEventListener("message",(e=>{const t=JSON.parse(e.data);n(t)}));const s=(0,u.E)(u.E.get((async e=>{const t=function(){return(0,u.E)(u.E.get(e()).loadingNotifier).getUpdateSince(...arguments)};let n=await t();for(;n.value.includes("wallet");)console.log("waiting for wallet"),n=await t(n.updateCount);return e()})(o)).wallet).getAdminFacet();s.then(e.service.send({type:"connected"})),e._bridgePK.resolve(s)};return{render:()=>"",hostConnected:()=>{const{location:o,connectionParams:{accessToken:s}}=e.service.context;assert(o);const a=[o,window.location.href],r=()=>{const o=a.shift(),i=new URL("/private/captp",o);i.protocol=i.protocol.replace(/^http/,"ws"),s&&i.searchParams.set("accessToken",s);t=new WebSocket(i.href);const c=window.setTimeout((()=>{t.close()}),5e3);t.addEventListener("open",(e=>(window.clearTimeout(c),n()))),t.addEventListener("close",(t=>a.length>0?r():e.reset())),t.addEventListener("error",(()=>{}))};r(o)},hostDisconnected:()=>{t.close()}}},y=e=>{const t=t=>{console.log(e.state,"bridge received",t);const{data:n}=t.detail;n&&"string"===typeof n.type&&("walletBridgeClosed"===n.type&&e.reset(),n.type.startsWith("CTP_")&&((0,a.hu)(e._captp),e._captp.dispatch(n)))};let n=o=>{console.log(e.state,"connect received",o);const{data:s,send:r}=o.detail;a.hu.equal(s.type,"walletBridgeLoaded",a.Xv`Unexpected connect message type ${s.type}`),e._startCapTP(r,e.service.context.suggestedDappPetname,e._walletCallbacks),n=t,e.service.send({type:"connected"})};return{render:()=>{const{location:t,connectionParams:{suggestedDappPetname:o}}=e.service.context;(0,a.hu)(t);const r=new URL(t);return o&&r.searchParams.append("suggestedDappPetname",o),s.dy`
        <agoric-iframe-messenger
          src=${r.href}
          @open=${e.onOpen}
          @message=${n}
          @error=${e.onError}
        ></agoric-iframe-messenger>
      `},hostConnected(){},hostDisconnected(){}}},k="https://local.agoric.com/?append=/wallet-bridge.html",S=(e,t)=>new Promise((n=>setTimeout(n,e,t))),P=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g.Ol;return class extends s.oi{static get styles(){return s.iv`
        :host {
          display: block;
          padding: 25px;
          color: var(--agoric-wallet-connection-text-color, #000);
        }
      `}static get properties(){return{state:{type:String}}}get state(){return this.machine.state.name}async reset(){this.isResetting||(this.isResetting=!0,await S(3e3,"reset"),this._captp&&(this._captp.abort(),this._captp=null),this._connector&&(this._connector.hostDisconnected(),this._connector=null),this._bridgePK=(0,w.g)(),this._cache=void 0,this.service.send({type:"reset"}),this.isResetting=!1)}get cache(){if(this._cache)return this._cache;const e=h((0,u.E)(this._bridgePK.promise).getCacheCoordinator());return this._cache=function(t,n){for(var o=arguments.length,s=new Array(o>2?o-2:0),a=2;a<o;a++)s[a-2]=arguments[a];return e(t,n,...s)},this._cache}get walletConnection(){var e=this;return this._walletConnection||(this._walletConnection=(0,v.cI)("WalletConnection",{getScopedBridge:function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:window.location.origin,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:y;return a.hu.equal(e.state,"idle",a.Xv`Cannot get scoped bridge in state ${e.state}`),e.service.send({type:"locate",connectionParams:{caller:"getScopedBridge",suggestedDappPetname:t,dappOrigin:n,makeConnector:o}}),e._bridgePK.promise},getAdminBootstrap:function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b;return a.hu.equal(e.state,"idle",a.Xv`Cannot get admin bootstrap in state ${e.state}`),e.service.send({type:"locate",connectionParams:{caller:"getAdminBootstrap",accessToken:t,makeConnector:n}}),e._bridgePK.promise},reset:()=>{this.reset()}})),this._walletConnection}constructor(){var e;super(),e=this;const t=E(),n=function(t){let n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e.machine=t.machine;const o=new CustomEvent("state",{detail:{...e.machine.context,state:e.machine.state.name,walletConnection:e.walletConnection,cache:e.cache}});e.dispatchEvent(o),n&&e.requestUpdate()};this.service=(0,m.kJ)(t,n),this.machine=this.service.machine,this.firstUpdated=()=>n(this.service,!1),this._nextEpoch=0,this._bridgePK=(0,w.g)(),this._walletCallbacks=(0,v.cI)("walletCallbacks",{needDappApproval:(e,t)=>{this.service.send({type:"needDappApproval",dappOrigin:e,suggestedDappPetname:t})},dappApproved:e=>{this.service.send({type:"dappApproved",dappOrigin:e})}})}onOpen(e){console.log(this.state,"open",e),"bridged"===this.state&&((0,a.hu)(this._captp),this._bridgePK.resolve(this._captp.getBootstrap()))}onLocateMessage(e){console.log(this.state,"locate",e);const{data:t}=e.detail;a.hu.typeof(t,"string",a.Xv`Expected locate message to be a string`),this.service.send({type:"located",href:t})}onError(e){console.log(this.state,"error",e),this.service.send({type:"error",error:e.detail&&e.detail.error||"Unknown error"}),this._captp=null}_startCapTP(t,n,o){const s=this._nextEpoch;this._nextEpoch+=1,this._captp=e(`${n}.${s}`,(e=>{t(e)}),o,{epoch:s})}disconnectedCallback(){super.disconnectedCallback(),this._captp&&(this._captp.abort(),this._captp=null),this._connector&&(this._connector.hostDisconnected(),this._connector=null)}render(){let e;switch(this.state){case"locating":e=s.dy`
            <agoric-iframe-messenger
              src=${k}
              @open=${this.onOpen}
              @message=${this.onLocateMessage}
              @error=${this.onError}
            ></agoric-iframe-messenger>
          `;break;case"approving":case"bridged":case"connecting":this._connector||(this._connector=this.service.context.connectionParams.makeConnector(this),this._connector.hostConnected()),e=this._connector.render()}return s.dy`
        <div>Agoric Wallet Connection: ${this.state}</div>
        ${e}
      `}}}(),T=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{};return class extends s.oi{static get properties(){return{src:{type:String}}}constructor(){super(),this.src="",this._contentWindow=null,this._origin=null,this._timeout=void 0,this.send=this.send.bind(this),this._onMessage=this._onMessage.bind(this),e(this)}connectedCallback(){super.connectedCallback(),window.addEventListener("message",this._onMessage)}disconnectedCallback(){window.removeEventListener("message",this._onMessage),super.disconnectedCallback()}render(){return s.dy`
        <iframe
          title="Agoric Iframe Messenger"
          src=${this.src}
          @load=${this._onLoad}
          @abort=${this._onError}
          @error=${this._onError}
        ></iframe>
      `}firstUpdated(){const e=this.renderRoot.querySelector("iframe");(0,a.hu)(e),this._contentWindow=e.contentWindow,this._timeout=window.setTimeout((()=>{const e=new CustomEvent("error",{detail:{error:new Error("connection timeout")}});this.dispatchEvent(e)}),5e3)}_onLoad(e){e.preventDefault();const t=new CustomEvent("open",{detail:{send:this.send}});this._origin=new URL(this.src).origin,this.dispatchEvent(t)}_onMessage(e){if(e.source!==this._contentWindow)return;this._timeout&&(window.clearTimeout(this._timeout),this._timeout=void 0),e.preventDefault();const t=new CustomEvent("message",{detail:{data:e.data,send:this.send}});this.dispatchEvent(t)}_onError(e){e.preventDefault();const t=new CustomEvent("error",{detail:{error:e.error}});this.dispatchEvent(t)}send(e){(0,a.hu)(this._contentWindow),(0,a.hu)(this._origin),this._contentWindow.postMessage(e,this._origin)}}}();window.customElements.define("agoric-iframe-messenger",T),window.customElements.define("agoric-wallet-connection",P);console.warn("This package is deprecated. Use @agoric/web-components instead of @agoric/wallet-connection.");var L=n(3617),$=n(589),B=n(6046),R=n(7141),x=n(3308);const A=e=>t=>{let n;const o=()=>{t._startCapTP((e=>{n.readyState===WebSocket.OPEN&&n.send(JSON.stringify(e))}),"walletAdmin"),assert(t._captp);const{dispatch:e,getBootstrap:o}=t._captp;n.addEventListener("message",(t=>{const n=JSON.parse(t.data);e(n)}));const s=(0,u.E)(u.E.get((async e=>{const t=function(){return(0,u.E)(u.E.get(e()).loadingNotifier).getUpdateSince(...arguments)};let n=await t();for(;n.value.includes("wallet");)console.log("waiting for wallet"),n=await t(n.updateCount);return e()})(o)).wallet).getAdminFacet();s.then(t.service.send({type:"connected"})),t._bridgePK.resolve(s)};return{render:()=>"",hostConnected:()=>{const{location:s,connectionParams:{accessToken:a}}=t.service.context;assert(s);(()=>{const s=new URL("/private/captp",e);s.protocol=s.protocol.replace(/^http/,"ws"),a&&s.searchParams.set("accessToken",a);n=new WebSocket(s.href);const r=window.setTimeout((()=>{n.close()}),5e3);n.addEventListener("open",(e=>(window.clearTimeout(r),o()))),n.addEventListener("close",(e=>t.reset())),n.addEventListener("error",(()=>{}))})()},hostDisconnected:()=>{n.close()}}};var D=n(5030);const O=(0,B.Z)((e=>({hidden:{display:"none"}}))),U=(W=L,(0,o.L)(W,"agoric-wallet-connection",P,{onState:"state"}));var W;const M=(0,R.LW)((e=>{let{setBackend:t,setConnectionState:n,disconnect:o,walletConnection:s}=e;const a=O(),[r,i]=(0,L.useState)(null);let c=null;const l=(0,L.useCallback)((e=>{if(c)return;const{walletConnection:t,state:o}=e.detail;n(o),r||i(t)}),[s]);return(0,L.useEffect)((()=>{if(!r||!s||!s.accessToken)return()=>{};const e=(0,u.E)(r).getAdminBootstrap(s.accessToken,A(s.url)),{backendIt:n,cancel:a}=(0,x.q)(e);return(0,$.uO)(n,{updateState:e=>{if(c)throw Error("cancelled");t(e)}}).catch((e=>{if(!c)throw e})),()=>{c=!0,o(),a()}}),[r,s]),(0,D.jsx)(U,{onState:l,className:a.hidden})}),(e=>({setConnectionState:e.setConnectionState,disconnect:e.disconnect,setBackend:e.setBackend,walletConnection:e.walletConnection})))}}]);
//# sourceMappingURL=477.28b31123.chunk.js.map