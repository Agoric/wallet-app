"use strict";(globalThis.webpackChunk_agoric_wallet_ui=globalThis.webpackChunk_agoric_wallet_ui||[]).push([[477],{689:(e,t,n)=>{n.r(t),n.d(t,{default:()=>q});var o=n(7990),s=n(3519),a=n(4698),r=n(7017),c=n(6912),i=n(3176);n(6523);const l=harden({generation:0n,value:void 0}),d=e=>({...e,get:t=>e.has(t)?e.get(t):l});harden(d);const h=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>e,t=0;const n=new WeakMap,o=e=>{let o=n.get(e);return o||(t+=1,o=t,n.set(e,o)),o},{serialize:s}=(0,c.AU)(o),a=async t=>{const n=await e(t),o=s(n);return JSON.stringify(o)};return a},p=async(e,t,n,o,s)=>{const a=async e=>{const{value:s}=e;if(!(0,i.wB)(s,n))return null;return function(e){return harden({generation:(arguments.length>1&&void 0!==arguments[1]?arguments[1]:l).generation+1n,value:e})}(await o(t(s)),e)};let r=s.get(e),c=await a(r);for(r=s.get(e);c&&c.generation<=r.generation;)c=await a(r),r=s.get(e);return c?(r.generation<1n?s.init(e,c):s.set(e,c),c.value):r.value},g=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,i.vO)(),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c.hP;const n=h(t),o=d(e),s=(0,r.cI)("store cache coordinator",{getRecentValue:async e=>{const t=await n(e);return o.get(t).value},setCacheValue:async(e,s,a)=>{const r=await n(e);return p(r,(()=>s),a,t,o)},updateCacheValue:async(e,s,a)=>{const c=await n(e);return p(c,(e=>(0,r.E)(s).update(e)),a,t,o)}});return s},u=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g();const t=function(t){for(var n=arguments.length,o=new Array(n>1?n-1:0),s=1;s<n;s++)o[s-1]=arguments[s];if(0===o.length)return(0,r.E)(e).getRecentValue(t);const[a,c]=o;if("function"!==typeof a)return(0,r.E)(e).setCacheValue(t,a,c);const i=(0,r.cI)("cache updater",{update:e=>a(e)});return(0,r.E)(e).updateCacheValue(t,i,c)};return t};var v=n(3770),w=n(603),m=n(5725),_=(n(2691),n(9947));const f=_.u4,C=()=>({error:null,location:null,connectionParams:{}}),E=[(0,_.eR)("reset","idle",f(C)),(0,_.eR)("error","error",f(((e,t)=>({...e,error:t.error}))))],b=()=>(0,_.C8)({idle:(0,_.SB)(...E,(0,_.eR)("locate","locating",f(((e,t)=>({...e,connectionParams:t.connectionParams})))),(0,_.eR)("connect","connecting")),locating:(0,_.SB)(...E,(0,_.j8)("connecting",(0,_.lo)((e=>{let{location:t}=e;return!!t}))),(0,_.eR)("located","connecting",f(((e,t)=>({...e,location:t.href}))))),connecting:(0,_.SB)(...E,(0,_.eR)("connected","bridged")),bridged:(0,_.SB)(...E,(0,_.eR)("needDappApproval","approving")),approving:(0,_.SB)(...E,(0,_.eR)("needDappApproval","approving"),(0,_.eR)("dappApproved","bridged")),error:(0,_.SB)(...E)},C),y=e=>{let t;const n=()=>{e._startCapTP((e=>{t.readyState===WebSocket.OPEN&&t.send(JSON.stringify(e))}),"walletAdmin"),assert(e._captp);const{dispatch:n,getBootstrap:o}=e._captp;t.addEventListener("message",(e=>{const t=JSON.parse(e.data);n(t)}));const s=(0,w.E)(w.E.get((async e=>{const t=function(){return(0,w.E)(w.E.get(e()).loadingNotifier).getUpdateSince(...arguments)};let n=await t();for(;n.value.includes("wallet");)console.log("waiting for wallet"),n=await t(n.updateCount);return e()})(o)).wallet).getAdminFacet();s.then(e.service.send({type:"connected"})),e._bridgePK.resolve(s)};return{render:()=>"",hostConnected:()=>{const{location:o,connectionParams:{accessToken:s}}=e.service.context;assert(o);const a=[o,window.location.href],r=()=>{const o=a.shift(),c=new URL("/private/captp",o);c.protocol=c.protocol.replace(/^http/,"ws"),s&&c.searchParams.set("accessToken",s);t=new WebSocket(c.href);const i=window.setTimeout((()=>{t.close()}),5e3);t.addEventListener("open",(e=>(window.clearTimeout(i),n()))),t.addEventListener("close",(t=>a.length>0?r():e.reset())),t.addEventListener("error",(()=>{}))};r(o)},hostDisconnected:()=>{t.close()}}},k=e=>{const t=t=>{console.log(e.state,"bridge received",t);const{data:n}=t.detail;n&&"string"===typeof n.type&&("walletBridgeClosed"===n.type&&e.reset(),n.type.startsWith("CTP_")&&((0,a.hu)(e._captp),e._captp.dispatch(n)))};let n=o=>{console.log(e.state,"connect received",o);const{data:s,send:r}=o.detail;a.hu.equal(s.type,"walletBridgeLoaded",a.Xv`Unexpected connect message type ${s.type}`),e._startCapTP(r,e.service.context.suggestedDappPetname,e._walletCallbacks),n=t,e.service.send({type:"connected"}),e._bridgePK.resolve(e._captp.getBootstrap())};return{render:()=>{const{location:t,connectionParams:{suggestedDappPetname:o}}=e.service.context;(0,a.hu)(t);const r=new URL(t);return o&&r.searchParams.append("suggestedDappPetname",o),s.dy`
        <agoric-iframe-messenger
          src=${r.href}
          @message=${n}
          @error=${e.onError}
        ></agoric-iframe-messenger>
      `},hostConnected(){},hostDisconnected(){}}},P="https://local.agoric.com/?append=/wallet-bridge.html",S="https://local.agoric.com/?append=/wallet/bridge.html",L=(e,t)=>new Promise((n=>setTimeout(n,e,t))),B=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v.Ol;return class extends s.oi{static get styles(){return s.iv`
        :host {
          display: block;
          padding: 8px;
          color: var(--agoric-wallet-connection-text-color, #737373);
        }
        .connection {
          background-color: #fff;
        }
        .connection-message {
          text-align: center;
        }
        .connection-message > a {
          text-decoration: none;
          color: #1976d2;
        }
      `}static get properties(){return{state:{type:String},useLocalStorage:{type:Boolean}}}get state(){return this.machine.state.name}async reset(){this.isResetting||(this.isResetting=!0,await L(3e3,"reset"),this._captp&&(this._captp.abort(),this._captp=null),this._connector&&(this._connector.hostDisconnected(),this._connector=null),this._bridgePK=(0,m.gn)(),this._cache=void 0,this._makeDefaultLeader=void 0,this.service.send({type:"reset"}),this.isResetting=!1)}get cache(){if(this._cache)return this._cache;const e=u((0,w.E)(this._bridgePK.promise).getCacheCoordinator());return this._cache=e,this._cache}get walletConnection(){var e=this;return this._walletConnection||(this._walletConnection=(0,c.cI)("WalletConnection",{getScopedBridge:function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:window.location.origin,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:k;return a.hu.equal(e.state,"idle",a.Xv`Cannot get scoped bridge in state ${e.state}`),e.service.send({type:"locate",connectionParams:{caller:"getScopedBridge",suggestedDappPetname:t,dappOrigin:n,makeConnector:o}}),e._bridgePK.promise},getAdminBootstrap:function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:y;return a.hu.equal(e.state,"idle",a.Xv`Cannot get admin bootstrap in state ${e.state}`),e.service.send({type:"locate",connectionParams:{caller:"getAdminBootstrap",accessToken:t,makeConnector:n}}),e._bridgePK.promise},reset:()=>{this.reset()}})),this._walletConnection}constructor(){var e;super(),e=this,this.useLocalStorage=!1;const t=b(),n=function(t){let n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e.machine=t.machine;const o=new CustomEvent("state",{detail:{...e.machine.context,state:e.machine.state.name,walletConnection:e.walletConnection,cache:e.cache}});e.dispatchEvent(o),n&&e.requestUpdate()};this.service=(0,_.kJ)(t,n),this.machine=this.service.machine,this.firstUpdated=()=>n(this.service,!1),this._nextEpoch=0,this._bridgePK=(0,m.gn)(),this._walletCallbacks=(0,c.cI)("walletCallbacks",{needDappApproval:(e,t)=>{this.service.send({type:"needDappApproval",dappOrigin:e,suggestedDappPetname:t})},dappApproved:e=>{this.service.send({type:"dappApproved",dappOrigin:e})}})}onLocateMessage(e){console.log(this.state,"locate",e);const{data:t}=e.detail;a.hu.typeof(t,"string",a.Xv`Expected locate message to be a string`),this.service.send({type:"located",href:t})}onError(e){console.log(this.state,"error",e),this.service.send({type:"error",error:e.detail&&e.detail.error||"Unknown error"}),this._captp=null}_startCapTP(t,n,o){const s=this._nextEpoch;this._nextEpoch+=1,this._captp=e(`${n}.${s}`,(e=>{t(e)}),o,{epoch:s})}disconnectedCallback(){super.disconnectedCallback(),this._captp&&(this._captp.abort(),this._captp=null),this._connector&&(this._connector.hostDisconnected(),this._connector=null)}render(){let e;const t=this.useLocalStorage?S:P;switch(this.state){case"locating":e=s.dy`
            <agoric-iframe-messenger
              src=${t}
              @message=${this.onLocateMessage}
              @error=${this.onError}
            ></agoric-iframe-messenger>
          `;break;case"approving":case"bridged":case"connecting":this._connector||(this._connector=this.service.context.connectionParams.makeConnector(this),this._connector.hostConnected()),e=this._connector.render()}const n=new URL(t);return s.dy`
        <div class="connection">
          ${e}
          <div class="connection-message">
            Wallet URL configured in
            <a href=${n.origin} target="_blank">${n.host}</a>
          </div>
        </div>
      `}}}(),R=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{};return class extends s.oi{static get properties(){return{src:{type:String}}}static get styles(){return s.iv`
        :host {
          display: block;
        }
        iframe {
          border: none;
          overflow: auto;
          height: 64px;
        }
      `}constructor(){super(),this.src="",this._contentWindow=null,this._origin=null,this._timeout=void 0,this.send=this.send.bind(this),this._onMessage=this._onMessage.bind(this),e(this)}connectedCallback(){super.connectedCallback(),window.addEventListener("message",this._onMessage)}disconnectedCallback(){window.removeEventListener("message",this._onMessage),super.disconnectedCallback()}render(){return s.dy`
        <iframe
          title="Agoric Iframe Messenger"
          src=${this.src}
          @abort=${this._onError}
          @error=${this._onError}
          scrolling="no"
        ></iframe>
      `}updated(){this._origin=new URL(this.src).origin}firstUpdated(){const e=this.renderRoot.querySelector("iframe");(0,a.hu)(e),this._contentWindow=e.contentWindow,this._timeout=window.setTimeout((()=>{const e=new CustomEvent("error",{detail:{error:new Error("connection timeout")}});this.dispatchEvent(e)}),5e3)}_onMessage(e){if(e.source!==this._contentWindow)return;this._timeout&&(window.clearTimeout(this._timeout),this._timeout=void 0),e.preventDefault();const t=new CustomEvent("message",{detail:{data:e.data,send:this.send}});this.dispatchEvent(t)}_onError(e){e.preventDefault();const t=new CustomEvent("error",{detail:{error:e.error}});this.dispatchEvent(t)}send(e){(0,a.hu)(this._contentWindow),(0,a.hu)(this._origin),this._contentWindow.postMessage(e,this._origin)}}}();window.customElements.define("agoric-iframe-messenger",R),window.customElements.define("agoric-wallet-connection",B);console.warn("This package is deprecated. Use @agoric/web-components instead of @agoric/wallet-connection.");var T=n(3617),x=n(3876),A=n(6046),D=n(7141),$=n(6525);const U=e=>t=>{let n;const o=()=>{t._startCapTP((e=>{n.readyState===WebSocket.OPEN&&n.send(JSON.stringify(e))}),"walletAdmin"),assert(t._captp);const{dispatch:e,getBootstrap:o}=t._captp;n.addEventListener("message",(t=>{const n=JSON.parse(t.data);e(n)}));const s=(0,w.E)(w.E.get((async e=>{const t=function(){return(0,w.E)(w.E.get(e()).loadingNotifier).getUpdateSince(...arguments)};let n=await t();for(;n.value.includes("wallet");)console.log("waiting for wallet"),n=await t(n.updateCount);return e()})(o)).wallet).getAdminFacet();s.then(t.service.send({type:"connected"})),t._bridgePK.resolve(s)};return{render:()=>"",hostConnected:()=>{const{location:s,connectionParams:{accessToken:a}}=t.service.context;assert(s);(()=>{const s=new URL("/private/captp",e);s.protocol=s.protocol.replace(/^http/,"ws"),a&&s.searchParams.set("accessToken",a);n=new WebSocket(s.href);const r=window.setTimeout((()=>{n.close()}),5e3);n.addEventListener("open",(e=>(window.clearTimeout(r),o()))),n.addEventListener("close",(e=>t.reset())),n.addEventListener("error",(()=>{}))})()},hostDisconnected:()=>{n.close()}}};var W=n(4139),O=n(5030);const M=(0,A.Z)((e=>({hidden:{display:"none"}}))),N=(K=T,(0,o.L)(K,"agoric-wallet-connection",B,{onState:"state"}));var K;const q=(0,D.LW)((e=>{let{setBackend:t,setConnectionState:n,disconnect:o,connectionConfig:s}=e;const a=M(),[r,c]=(0,T.useState)(null);let i=null;return(0,T.useEffect)((()=>{if(!r)return()=>{};const e=(0,w.E)(r).getAdminBootstrap(s.accessToken,U(s.href)),{backendIt:n,cancel:a}=(0,$.q)(e);(0,x.uO)(n,{updateState:e=>{if(i)throw Error("cancelled");t(e)}}).catch((e=>{if(!i)throw e}));const c=(0,W.g)(e);return()=>{i=!0,c(),o(),a()}}),[r]),(0,O.jsx)(N,{onState:e=>{if(i)return;const{walletConnection:t,state:o}=e.detail;n(o),r||c(t)},className:a.hidden})}),(e=>({setConnectionState:e.setConnectionState,disconnect:e.disconnect,setBackend:e.setBackend,connectionConfig:e.connectionConfig})))}}]);
//# sourceMappingURL=477.819a92d8.chunk.js.map